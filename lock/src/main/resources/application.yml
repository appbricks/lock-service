---
spring:

  resources.chain.enabled: true

  mail:
    # host: your-smtp.server.com
    # port: 25
    # username: xxxxxxxx
    # password: xxxxxxxx

    properties.mail.smtp.auth: true
    properties.mail.smtp.starttls.enable: true

  jpa.show-sql: true

  # Hibernate Specific properties
  jpa.properties.hibernate.format_sql: false
  jpa.hibernate.ddl-auto: update

  # For testing with local mysql instance run the following
  # to create a database and user for the broker and
  # uncomment the following properties.
  #
  # CREATE DATABASE mongodbaas;
  # GRANT USAGE ON *.* TO 'service_broker'@'localhost';
  # GRANT ALL PRIVILEGES ON mongodbaas.* TO 'service_broker'@'localhost' IDENTIFIED BY 'm0ngodbaas!';
  # GRANT ALL PRIVILEGES ON mongodbaas.* TO 'service_broker'@'%' IDENTIFIED BY 'm0ngodbaas!';
  #

  # General JPA properties
  #
  #jpa.database-platform: org.hibernate.dialect.MySQL5Dialect

  # MySQL data source
  #
  #datasource:
  #  url: jdbc:mysql://localhost/mongodbaas
  #  username: service_broker
  #  password: "m0ngodbaas!"
  #  driver-class-name: com.mysql.jdbc.Driver

oauth2:
  client:

    #
    # Client ID is set programmatically and
    # is the same as the service ID.
    #
    # clientId:

    clientSecret: m0ngodbaas!
    accessTokenUri: https://uaa.bosh-lite.com/oauth/token
    userAuthorizationUri: https://uaa.bosh-lite.com/oauth/authorize
    authenticationScheme: form
    clientAuthenticationScheme: header

    #
    # Add "cloud_controller.read" scope to enable access
    # to CC API to retrieve names of bound apps
    #
    scope: [ cloud_controller.read, cloud_controller.write, cloud_controller_service_permissions.read, openid ]

    # Override default redirect URI
    redirectUri: http://localhost:8080/dashboard/login
    use-current-uri: false

    # Do not validate SSL certs
    sslVerify: no

  resource:
    userInfoUri: https://uaa.bosh-lite.com/userinfo

cloudfoundry:
  apiUrl: http://api.bosh-lite.com

logging:
  level.org.springframework.web: DEBUG
  level.org.cloudfoundry: DEBUG
  level.org.mongoops: DEBUG

# Only relevant for non-cloud deployments. For cloud deployments
# this config will be provided via a user provided service.
# Override these properties via the gradle.properties file for
# local development.
#
#mongodb.om:
#  host: localhost
#  port: 8080
#  apiPath: /api/public/v1.0
#  apiRealm: MMS Public API
#  apiUser: xxxxxxxx@xxxx.com
#  apiKey: xxxxxxxx
#  groupId: xxxxxxxx
#
#  dbAdminUser: xxxxxxxx
#  dbAdminPassword: xxxxxxxx

mongodb.servicebroker.catalog:

  # This ID will be programmatically
  # set as the OAuth client ID.
  id: mongodb_dedicated_local

  name: mongodb-dedicated-local
  description: This service provides Highly-Available MongoDB instances
  plans:
  - id: small
    name: small
    description: This is a free plan to be used only for development.
    free: true
    nodeCount: 3
    nodeIncludePattern: .*small.*
    metadata:
      costs:
      - amount:
          usd: 0.0
        unit: MONTHLY
      bullets:
      - Free Small MongoDB instance
      - 4 GB RAM
      - 8 GB Storage
  - id: medium
    name: medium
    description: Medium sized plan
    nodeCount: 3
    nodeIncludePattern: .*medium.*
    metadata:
      costs:
      - amount:
          usd: 0.0
        unit: MONTHLY
      bullets:
      - Medium MongoDB instance
      - 16 GB RAM
      - 64 GB Storage
  - id: large
    name: large
    description: Large sized plan
    nodeCount: 3
    nodeIncludePattern: .*large.*
    metadata:
      costs:
      - amount:
          usd: 0.0
        unit: MONTHLY
      bullets:
      - Large MongoDB instance
      - 16 GB RAM
      - 128 GB Storage

  # Metadata used by PCF Apps Manager
  displayName: MongoDB Enterprise Dedicated
  displayDescription: MongodDB Enterprise Service
  displayProviderName: MongoDB
  imageUrl: http://orig11.deviantart.net/21b0/f/2010/168/e/1/icon_mongodb_by_xkneo.png
  documentationUrl: https://docs.mongodb.org
  supportUrl: http://jira.mongodb.org/browse/CS

mongodb.servicebroker:
  apiVersion: 2.7

mongodb.replicaset:

  authSchemaVersion: 5

  alert.type: email
  # alert.email.toEmail: xxxxxxxx@xxxx.com

  # Alert when number of available automation
  # nodes falls below this number
  alert.remainingNodes: 9

automation:
  nodeAzPattern:

security:
  user.password: m0ngodbaas!

server:
  port: 8080

---
spring:
  profiles: cloud_development

  # Hibernate Specific properties
  jpa.properties.hibernate.format_sql: false
  jpa.hibernate.ddl-auto: update

  # General JPA properties
  jpa.show-sql: true
  jpa.database-platform: org.hibernate.dialect.MySQL5Dialect

mongodb.servicebroker.catalog:
  id: mongodb_dedicated_dev
  name: mongodb-dedicated-dev

logging:
  level.org.springframework.web: DEBUG
  level.org.cloudfoundry: DEBUG
  level.org.mongoops: DEBUG

automation:
  nodeAzPattern:

---
spring:
  profiles: cloud_test

  # Hibernate Specific properties
  jpa.properties.hibernate.format_sql: false
  jpa.hibernate.ddl-auto: update

  # General JPA properties
  jpa.database-platform: org.hibernate.dialect.MySQL5Dialect

mongodb.servicebroker.catalog:
  id: mongodb_dedicated_test
  name: mongodb-dedicated-test

automation:
  nodeIncludePattern: ".*"
  nodeAzPattern:

---
spring:
  profiles: cloud_production

  # Hibernate Specific properties
  jpa.properties.hibernate.format_sql: false
  jpa.hibernate.ddl-auto: update

  # General JPA properties
  jpa.database-platform: org.hibernate.dialect.MySQL5Dialect

mongodb.servicebroker.catalog:
  id: mongodb_dedicated
  name: mongodb-dedicated

automation:
  nodeAzPattern:
