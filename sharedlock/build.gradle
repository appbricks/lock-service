buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://repo.spring.io/release' }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/release" }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

description = 'Distributed Lock Service.'
archivesBaseName = "appbricks-sharedlock-service"

group 'org.appbricks'
version '0.1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    springVersion = '4.2.5.RELEASE'
    springBootVersion = '1.3.2.RELEASE'
    springDataJpaVersion = '1.9.4.RELEASE'
    apacheCommonsLangVersion = '3.4'
    apacheCommonsDbcp2Version = '2.1.1'
    hibernateJpaSupportVersion = '5.1.0.Final'
    h2databaseVersion = '1.4.191'
    mysqlConnectorVersion = '5.1.38'

    log4jVersion = '2.5'
    sl4jVersion = '1.7.19'

    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    assertJVersion = '3.3.0'
}

configurations {
    providedRuntime
}

dependencies {

    // Spring
    compile("org.springframework:spring-core:${springVersion}")
    compile("org.springframework:spring-context:${springVersion}")
    compile("org.springframework:spring-aop:${springVersion}")
    compile("org.springframework:spring-jdbc:${springVersion}")
    compile("org.springframework:spring-tx:${springVersion}")
    compile("org.springframework.data:spring-data-jpa:${springDataJpaVersion}")

    // Apache
    compile("org.apache.commons:commons-lang3:${apacheCommonsLangVersion}")
    runtime("org.apache.commons:commons-dbcp2:${apacheCommonsDbcp2Version}")

    // Persistence
    compile("org.hibernate:hibernate-entitymanager:${hibernateJpaSupportVersion}")
    runtime("com.h2database:h2:${h2databaseVersion}")

    // Logging
    testCompile("org.slf4j:slf4j-api:${sl4jVersion}")
    testCompile("org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}")
    testCompile("org.apache.logging.log4j:log4j-api:${log4jVersion}")
    testCompile("org.apache.logging.log4j:log4j-core:${log4jVersion}")

    // Spring framework
    testCompile("org.springframework:spring-test:${springVersion}")

    // Unit testing frameworks
    testCompile("junit:junit:${junitVersion}")
    testCompile("org.mockito:mockito-core:${mockitoVersion}")
    testCompile("org.assertj:assertj-core:${assertJVersion}")
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

signing {
    sign configurations.archives
}

artifacts {
    archives javadocJar, sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Distributed Locking Service'
                packaging 'jar'
                description 'Provides a locking capability for distributed applications and services.'
                url 'https://github.com/appbricks/sharedlock-service.git'

                scm {
                    connection 'https://github.com/appbricks/sharedlock-service.git'
                    developerConnection 'https://github.com/appbricks/sharedlock-service.git'
                    url 'https://github.com/appbricks/sharedlock-service.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'mevansam'
                        name 'Mevan Samaratunga'
                        email 'mevansam@gmail.com'
                    }
                }
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.2.1"
}
